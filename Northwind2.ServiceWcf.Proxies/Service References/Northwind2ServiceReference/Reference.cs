//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactTitleSaveRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class ContactTitleSaveRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSDO ContactTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSDO ContactTitle {
            get {
                return this.ContactTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTitleField, value) != true)) {
                    this.ContactTitleField = value;
                    this.RaisePropertyChanged("ContactTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactTitleSDO", Namespace="http://www.northwind.com/services/Northwind2Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ContactTitleSDO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactTitleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactTitleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> CustomersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> SuppliersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactTitleID {
            get {
                return this.ContactTitleIDField;
            }
            set {
                if ((this.ContactTitleIDField.Equals(value) != true)) {
                    this.ContactTitleIDField = value;
                    this.RaisePropertyChanged("ContactTitleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactTitleName {
            get {
                return this.ContactTitleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTitleNameField, value) != true)) {
                    this.ContactTitleNameField = value;
                    this.RaisePropertyChanged("ContactTitleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedByField, value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public byte[] Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedField, value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> Customers {
            get {
                return this.CustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomersField, value) != true)) {
                    this.CustomersField = value;
                    this.RaisePropertyChanged("Customers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> Suppliers {
            get {
                return this.SuppliersField;
            }
            set {
                if ((object.ReferenceEquals(this.SuppliersField, value) != true)) {
                    this.SuppliersField = value;
                    this.RaisePropertyChanged("Suppliers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListItemSDO", Namespace="http://www.northwind.com/services/Northwind2Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ListItemSDO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnNumber", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class ReturnNumber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberValue {
            get {
                return this.NumberValueField;
            }
            set {
                if ((this.NumberValueField.Equals(value) != true)) {
                    this.NumberValueField = value;
                    this.RaisePropertyChanged("NumberValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryByIdRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class QueryByIdRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactTitleResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class ContactTitleResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSDO ContactTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSDO ContactTitle {
            get {
                return this.ContactTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTitleField, value) != true)) {
                    this.ContactTitleField = value;
                    this.RaisePropertyChanged("ContactTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactTitleSelectListResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class ContactTitleSelectListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSelectList ContactTitleSelectListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSelectList ContactTitleSelectList {
            get {
                return this.ContactTitleSelectListField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTitleSelectListField, value) != true)) {
                    this.ContactTitleSelectListField = value;
                    this.RaisePropertyChanged("ContactTitleSelectList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ContactTitleSelectList", Namespace="http://www.northwind.com/services/Northwind2Data", ItemName="ListItem")]
    [System.SerializableAttribute()]
    public class ContactTitleSelectList : System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactTitlesGetBySearchRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class ContactTitlesGetBySearchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactTitleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactTitleSearchTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.PaginationRequest PaginationRequestField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactTitleId {
            get {
                return this.ContactTitleIdField;
            }
            set {
                if ((this.ContactTitleIdField.Equals(value) != true)) {
                    this.ContactTitleIdField = value;
                    this.RaisePropertyChanged("ContactTitleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactTitleSearchText {
            get {
                return this.ContactTitleSearchTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTitleSearchTextField, value) != true)) {
                    this.ContactTitleSearchTextField = value;
                    this.RaisePropertyChanged("ContactTitleSearchText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.PaginationRequest PaginationRequest {
            get {
                return this.PaginationRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.PaginationRequestField, value) != true)) {
                    this.PaginationRequestField = value;
                    this.RaisePropertyChanged("PaginationRequest");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class PaginationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.Sort SortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.Sort Sort {
            get {
                return this.SortField;
            }
            set {
                if ((object.ReferenceEquals(this.SortField, value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sort", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class Sort : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.SortDirection SortDirectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortBy {
            get {
                return this.SortByField;
            }
            set {
                if ((object.ReferenceEquals(this.SortByField, value) != true)) {
                    this.SortByField = value;
                    this.RaisePropertyChanged("SortBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.SortDirection SortDirection {
            get {
                return this.SortDirectionField;
            }
            set {
                if ((this.SortDirectionField.Equals(value) != true)) {
                    this.SortDirectionField = value;
                    this.RaisePropertyChanged("SortDirection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortDirection", Namespace="http://www.northwind.com/services/Northwind2Data")]
    public enum SortDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Descending = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactTitleListResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class ContactTitleListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.Categories ContactTitlesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.Categories ContactTitles {
            get {
                return this.ContactTitlesField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTitlesField, value) != true)) {
                    this.ContactTitlesField = value;
                    this.RaisePropertyChanged("ContactTitles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Categories", Namespace="http://www.northwind.com/services/Northwind2Data", ItemName="ContactTitle")]
    [System.SerializableAttribute()]
    public class Categories : System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSDO> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountrySaveRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CountrySaveRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySDO CountryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySDO Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountrySDO", Namespace="http://www.northwind.com/services/Northwind2Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CountrySDO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> CustomersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> SuppliersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> InvoicesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedByField, value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public byte[] Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedField, value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> Customers {
            get {
                return this.CustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomersField, value) != true)) {
                    this.CustomersField = value;
                    this.RaisePropertyChanged("Customers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> Suppliers {
            get {
                return this.SuppliersField;
            }
            set {
                if ((object.ReferenceEquals(this.SuppliersField, value) != true)) {
                    this.SuppliersField = value;
                    this.RaisePropertyChanged("Suppliers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> Invoices {
            get {
                return this.InvoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoicesField, value) != true)) {
                    this.InvoicesField = value;
                    this.RaisePropertyChanged("Invoices");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CountryResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySDO CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySDO Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountrySelectListResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CountrySelectListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySelectList CountrySelectListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySelectList CountrySelectList {
            get {
                return this.CountrySelectListField;
            }
            set {
                if ((object.ReferenceEquals(this.CountrySelectListField, value) != true)) {
                    this.CountrySelectListField = value;
                    this.RaisePropertyChanged("CountrySelectList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CountrySelectList", Namespace="http://www.northwind.com/services/Northwind2Data", ItemName="ListItem")]
    [System.SerializableAttribute()]
    public class CountrySelectList : System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountriesGetBySearchRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CountriesGetBySearchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountrySearchTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.PaginationRequest PaginationRequestField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountrySearchText {
            get {
                return this.CountrySearchTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CountrySearchTextField, value) != true)) {
                    this.CountrySearchTextField = value;
                    this.RaisePropertyChanged("CountrySearchText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.PaginationRequest PaginationRequest {
            get {
                return this.PaginationRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.PaginationRequestField, value) != true)) {
                    this.PaginationRequestField = value;
                    this.RaisePropertyChanged("PaginationRequest");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryListResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CountryListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.Countries CountriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.Countries Countries {
            get {
                return this.CountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountriesField, value) != true)) {
                    this.CountriesField = value;
                    this.RaisePropertyChanged("Countries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Countries", Namespace="http://www.northwind.com/services/Northwind2Data", ItemName="Country")]
    [System.SerializableAttribute()]
    public class Countries : System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySDO> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerSaveRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CustomerSaveRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSDO CustomerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSDO Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerSDO", Namespace="http://www.northwind.com/services/Northwind2Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CustomerSDO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactTitleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactTitleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDOldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> InvoicesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int ContactTitleID {
            get {
                return this.ContactTitleIDField;
            }
            set {
                if ((this.ContactTitleIDField.Equals(value) != true)) {
                    this.ContactTitleIDField = value;
                    this.RaisePropertyChanged("ContactTitleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string ContactTitleName {
            get {
                return this.ContactTitleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTitleNameField, value) != true)) {
                    this.ContactTitleNameField = value;
                    this.RaisePropertyChanged("ContactTitleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string CustomerIDOld {
            get {
                return this.CustomerIDOldField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDOldField, value) != true)) {
                    this.CustomerIDOldField = value;
                    this.RaisePropertyChanged("CustomerIDOld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedByField, value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public byte[] Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedField, value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> Invoices {
            get {
                return this.InvoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoicesField, value) != true)) {
                    this.InvoicesField = value;
                    this.RaisePropertyChanged("Invoices");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CustomerResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSDO CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSDO Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerSelectListResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CustomerSelectListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSelectList CustomerSelectListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSelectList CustomerSelectList {
            get {
                return this.CustomerSelectListField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerSelectListField, value) != true)) {
                    this.CustomerSelectListField = value;
                    this.RaisePropertyChanged("CustomerSelectList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerSelectList", Namespace="http://www.northwind.com/services/Northwind2Data", ItemName="ListItem")]
    [System.SerializableAttribute()]
    public class CustomerSelectList : System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomersGetBySearchRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CustomersGetBySearchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSearchFields CustomerSearchFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.PaginationRequest PaginationRequestField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSearchFields CustomerSearchFields {
            get {
                return this.CustomerSearchFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerSearchFieldsField, value) != true)) {
                    this.CustomerSearchFieldsField = value;
                    this.RaisePropertyChanged("CustomerSearchFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.PaginationRequest PaginationRequest {
            get {
                return this.PaginationRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.PaginationRequestField, value) != true)) {
                    this.PaginationRequestField = value;
                    this.RaisePropertyChanged("PaginationRequest");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerSearchFields", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CustomerSearchFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactTitleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactTitleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int ContactTitleID {
            get {
                return this.ContactTitleIDField;
            }
            set {
                if ((this.ContactTitleIDField.Equals(value) != true)) {
                    this.ContactTitleIDField = value;
                    this.RaisePropertyChanged("ContactTitleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ContactTitleName {
            get {
                return this.ContactTitleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTitleNameField, value) != true)) {
                    this.ContactTitleNameField = value;
                    this.RaisePropertyChanged("ContactTitleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerListResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CustomerListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.Customers CustomersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.Customers Customers {
            get {
                return this.CustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomersField, value) != true)) {
                    this.CustomersField = value;
                    this.RaisePropertyChanged("Customers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Customers", Namespace="http://www.northwind.com/services/Northwind2Data", ItemName="Customer")]
    [System.SerializableAttribute()]
    public class Customers : System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSDO> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategorySelectListResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class CategorySelectListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CategorySelectList CategorySelectListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CategorySelectList CategorySelectList {
            get {
                return this.CategorySelectListField;
            }
            set {
                if ((object.ReferenceEquals(this.CategorySelectListField, value) != true)) {
                    this.CategorySelectListField = value;
                    this.RaisePropertyChanged("CategorySelectList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CategorySelectList", Namespace="http://www.northwind.com/services/Northwind2Data", ItemName="ListItem")]
    [System.SerializableAttribute()]
    public class CategorySelectList : System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductsGetBySearchRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class ProductsGetBySearchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductSearchFields ProductSearchFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.PaginationRequest PaginationRequestField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductSearchFields ProductSearchFields {
            get {
                return this.ProductSearchFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductSearchFieldsField, value) != true)) {
                    this.ProductSearchFieldsField = value;
                    this.RaisePropertyChanged("ProductSearchFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.PaginationRequest PaginationRequest {
            get {
                return this.PaginationRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.PaginationRequestField, value) != true)) {
                    this.PaginationRequestField = value;
                    this.RaisePropertyChanged("PaginationRequest");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductSearchFields", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class ProductSearchFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinUnitsInStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxUnitsInStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinUnitsOnOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxUnitsOnOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinReorderLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxReorderLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public decimal MinUnitPrice {
            get {
                return this.MinUnitPriceField;
            }
            set {
                if ((this.MinUnitPriceField.Equals(value) != true)) {
                    this.MinUnitPriceField = value;
                    this.RaisePropertyChanged("MinUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public decimal MaxUnitPrice {
            get {
                return this.MaxUnitPriceField;
            }
            set {
                if ((this.MaxUnitPriceField.Equals(value) != true)) {
                    this.MaxUnitPriceField = value;
                    this.RaisePropertyChanged("MaxUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public decimal MinUnitsInStock {
            get {
                return this.MinUnitsInStockField;
            }
            set {
                if ((this.MinUnitsInStockField.Equals(value) != true)) {
                    this.MinUnitsInStockField = value;
                    this.RaisePropertyChanged("MinUnitsInStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public decimal MaxUnitsInStock {
            get {
                return this.MaxUnitsInStockField;
            }
            set {
                if ((this.MaxUnitsInStockField.Equals(value) != true)) {
                    this.MaxUnitsInStockField = value;
                    this.RaisePropertyChanged("MaxUnitsInStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public decimal MinUnitsOnOrder {
            get {
                return this.MinUnitsOnOrderField;
            }
            set {
                if ((this.MinUnitsOnOrderField.Equals(value) != true)) {
                    this.MinUnitsOnOrderField = value;
                    this.RaisePropertyChanged("MinUnitsOnOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public decimal MaxUnitsOnOrder {
            get {
                return this.MaxUnitsOnOrderField;
            }
            set {
                if ((this.MaxUnitsOnOrderField.Equals(value) != true)) {
                    this.MaxUnitsOnOrderField = value;
                    this.RaisePropertyChanged("MaxUnitsOnOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public decimal MinReorderLevel {
            get {
                return this.MinReorderLevelField;
            }
            set {
                if ((this.MinReorderLevelField.Equals(value) != true)) {
                    this.MinReorderLevelField = value;
                    this.RaisePropertyChanged("MinReorderLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public decimal MaxReorderLevel {
            get {
                return this.MaxReorderLevelField;
            }
            set {
                if ((this.MaxReorderLevelField.Equals(value) != true)) {
                    this.MaxReorderLevelField = value;
                    this.RaisePropertyChanged("MaxReorderLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductListResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class ProductListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.Products ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.Products Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Products", Namespace="http://www.northwind.com/services/Northwind2Data", ItemName="Product")]
    [System.SerializableAttribute()]
    public class Products : System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductSDO> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductSDO", Namespace="http://www.northwind.com/services/Northwind2Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ProductSDO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityPerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitsInStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitsOnOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReorderLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> InvoicesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string QuantityPerUnit {
            get {
                return this.QuantityPerUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityPerUnitField, value) != true)) {
                    this.QuantityPerUnitField = value;
                    this.RaisePropertyChanged("QuantityPerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int UnitsInStock {
            get {
                return this.UnitsInStockField;
            }
            set {
                if ((this.UnitsInStockField.Equals(value) != true)) {
                    this.UnitsInStockField = value;
                    this.RaisePropertyChanged("UnitsInStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int UnitsOnOrder {
            get {
                return this.UnitsOnOrderField;
            }
            set {
                if ((this.UnitsOnOrderField.Equals(value) != true)) {
                    this.UnitsOnOrderField = value;
                    this.RaisePropertyChanged("UnitsOnOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int ReorderLevel {
            get {
                return this.ReorderLevelField;
            }
            set {
                if ((this.ReorderLevelField.Equals(value) != true)) {
                    this.ReorderLevelField = value;
                    this.RaisePropertyChanged("ReorderLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public byte[] Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedField, value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> Invoices {
            get {
                return this.InvoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoicesField, value) != true)) {
                    this.InvoicesField = value;
                    this.RaisePropertyChanged("Invoices");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierSelectListResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class SupplierSelectListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.SupplierSelectList SupplierSelectListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.SupplierSelectList SupplierSelectList {
            get {
                return this.SupplierSelectListField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierSelectListField, value) != true)) {
                    this.SupplierSelectListField = value;
                    this.RaisePropertyChanged("SupplierSelectList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SupplierSelectList", Namespace="http://www.northwind.com/services/Northwind2Data", ItemName="ListItem")]
    [System.SerializableAttribute()]
    public class SupplierSelectList : System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ListItemSDO> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class LoginRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class LoginResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInRoleRequest", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class UserInRoleRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInRoleResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class UserInRoleResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInRole {
            get {
                return this.IsInRoleField;
            }
            set {
                if ((this.IsInRoleField.Equals(value) != true)) {
                    this.IsInRoleField = value;
                    this.RaisePropertyChanged("IsInRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInRolesResponse", Namespace="http://www.northwind.com/services/Northwind2Data")]
    [System.SerializableAttribute()]
    public partial class UserInRolesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserToRoleNames UserToRoleNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserToRoleNames UserToRoleNames {
            get {
                return this.UserToRoleNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserToRoleNamesField, value) != true)) {
                    this.UserToRoleNamesField = value;
                    this.RaisePropertyChanged("UserToRoleNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name=" UserToRoleNames", Namespace="http://www.northwind.com/services/Northwind2Data", ItemName="UserToRoleNameSDO")]
    [System.SerializableAttribute()]
    public class UserToRoleNames : System.Collections.Generic.List<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserFullNameToRoleNameSDO> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserFullNameToRoleNameSDO", Namespace="http://schemas.datacontract.org/2004/07/Northwind2.ServiceWcf.SDO")]
    [System.SerializableAttribute()]
    public partial class UserFullNameToRoleNameSDO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationRoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationUserFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationUserLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationRoleID {
            get {
                return this.ApplicationRoleIDField;
            }
            set {
                if ((this.ApplicationRoleIDField.Equals(value) != true)) {
                    this.ApplicationRoleIDField = value;
                    this.RaisePropertyChanged("ApplicationRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationRoleName {
            get {
                return this.ApplicationRoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationRoleNameField, value) != true)) {
                    this.ApplicationRoleNameField = value;
                    this.RaisePropertyChanged("ApplicationRoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationUserFirstName {
            get {
                return this.ApplicationUserFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationUserFirstNameField, value) != true)) {
                    this.ApplicationUserFirstNameField = value;
                    this.RaisePropertyChanged("ApplicationUserFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationUserID {
            get {
                return this.ApplicationUserIDField;
            }
            set {
                if ((this.ApplicationUserIDField.Equals(value) != true)) {
                    this.ApplicationUserIDField = value;
                    this.RaisePropertyChanged("ApplicationUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationUserLastName {
            get {
                return this.ApplicationUserLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationUserLastNameField, value) != true)) {
                    this.ApplicationUserLastNameField = value;
                    this.RaisePropertyChanged("ApplicationUserLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.northwind.com/services/Northwind2Data", ConfigurationName="Northwind2ServiceReference.INorthwind2Service")]
    public interface INorthwind2Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleA" +
            "dd", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleA" +
            "ddResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber ContactTitleAdd(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleA" +
            "dd", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleA" +
            "ddResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> ContactTitleAddAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etByID", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etByIDResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleResponse ContactTitleGetByID(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etByID", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etByIDResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleResponse> ContactTitleGetByIDAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etAllList", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etAllListResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSelectListResponse ContactTitleGetAllList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etAllList", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etAllListResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSelectListResponse> ContactTitleGetAllListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etAll", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etAllResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleListResponse ContactTitleGetAll(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitlesGetBySearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etAll", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleG" +
            "etAllResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleListResponse> ContactTitleGetAllAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitlesGetBySearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleU" +
            "pdate", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleU" +
            "pdateResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber ContactTitleUpdate(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleU" +
            "pdate", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleU" +
            "pdateResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> ContactTitleUpdateAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleD" +
            "elete", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleD" +
            "eleteResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber ContactTitleDelete(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleD" +
            "elete", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ContactTitleD" +
            "eleteResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> ContactTitleDeleteAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryAdd", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryAddRes" +
            "ponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CountryAdd(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryAdd", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryAddRes" +
            "ponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CountryAddAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetByI" +
            "D", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetByI" +
            "DResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountryResponse CountryGetByID(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetByI" +
            "D", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetByI" +
            "DResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountryResponse> CountryGetByIDAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetAll" +
            "List", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetAll" +
            "ListResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySelectListResponse CountryGetAllList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetAll" +
            "List", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetAll" +
            "ListResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySelectListResponse> CountryGetAllListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetAll" +
            "", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetAll" +
            "Response")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountryListResponse CountryGetAll(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountriesGetBySearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetAll" +
            "", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryGetAll" +
            "Response")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountryListResponse> CountryGetAllAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountriesGetBySearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryUpdate" +
            "", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryUpdate" +
            "Response")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CountryUpdate(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryUpdate" +
            "", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryUpdate" +
            "Response")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CountryUpdateAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryDelete" +
            "", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryDelete" +
            "Response")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CountryDelete(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryDelete" +
            "", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CountryDelete" +
            "Response")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CountryDeleteAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerAdd", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerAddRe" +
            "sponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CustomerAdd(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerAdd", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerAddRe" +
            "sponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CustomerAddAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetBy" +
            "ID", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetBy" +
            "IDResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerResponse CustomerGetByID(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetBy" +
            "ID", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetBy" +
            "IDResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerResponse> CustomerGetByIDAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetAl" +
            "lList", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetAl" +
            "lListResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSelectListResponse CustomerGetAllList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetAl" +
            "lList", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetAl" +
            "lListResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSelectListResponse> CustomerGetAllListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetAl" +
            "l", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetAl" +
            "lResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerListResponse CustomerGetAll(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomersGetBySearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetAl" +
            "l", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerGetAl" +
            "lResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerListResponse> CustomerGetAllAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomersGetBySearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerUpdat" +
            "e", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerUpdat" +
            "eResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CustomerUpdate(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerUpdat" +
            "e", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerUpdat" +
            "eResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CustomerUpdateAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSaveRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerDelet" +
            "e", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerDelet" +
            "eResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CustomerDelete(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerDelet" +
            "e", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CustomerDelet" +
            "eResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CustomerDeleteAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CategoryGetAl" +
            "lList", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CategoryGetAl" +
            "lListResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CategorySelectListResponse CategoryGetAllList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CategoryGetAl" +
            "lList", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/CategoryGetAl" +
            "lListResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CategorySelectListResponse> CategoryGetAllListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ProductGetAll" +
            "", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ProductGetAll" +
            "Response")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductListResponse ProductGetAll(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductsGetBySearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ProductGetAll" +
            "", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ProductGetAll" +
            "Response")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductListResponse> ProductGetAllAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductsGetBySearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/SupplierGetAl" +
            "lList", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/SupplierGetAl" +
            "lListResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.SupplierSelectListResponse SupplierGetAllList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/SupplierGetAl" +
            "lList", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/SupplierGetAl" +
            "lListResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.SupplierSelectListResponse> SupplierGetAllListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/LoginAuthenti" +
            "cation", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/LoginAuthenti" +
            "cationResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.LoginResponse LoginAuthentication(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/LoginAuthenti" +
            "cation", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/LoginAuthenti" +
            "cationResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.LoginResponse> LoginAuthenticationAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ApplicationUs" +
            "erToApplicationRoleIsIn", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ApplicationUs" +
            "erToApplicationRoleIsInResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleResponse ApplicationUserToApplicationRoleIsIn(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ApplicationUs" +
            "erToApplicationRoleIsIn", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/ApplicationUs" +
            "erToApplicationRoleIsInResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleResponse> ApplicationUserToApplicationRoleIsInAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/UsernameInApp" +
            "licationRoles", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/UsernameInApp" +
            "licationRolesResponse")]
        Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRolesResponse UsernameInApplicationRoles(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/UsernameInApp" +
            "licationRoles", ReplyAction="http://www.northwind.com/services/Northwind2Data/INorthwind2Service/UsernameInApp" +
            "licationRolesResponse")]
        System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRolesResponse> UsernameInApplicationRolesAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INorthwind2ServiceChannel : Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.INorthwind2Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Northwind2ServiceClient : System.ServiceModel.ClientBase<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.INorthwind2Service>, Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.INorthwind2Service {
        
        public Northwind2ServiceClient() {
        }
        
        public Northwind2ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Northwind2ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Northwind2ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Northwind2ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber ContactTitleAdd(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSaveRequest input) {
            return base.Channel.ContactTitleAdd(input);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> ContactTitleAddAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSaveRequest input) {
            return base.Channel.ContactTitleAddAsync(input);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleResponse ContactTitleGetByID(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request) {
            return base.Channel.ContactTitleGetByID(request);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleResponse> ContactTitleGetByIDAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request) {
            return base.Channel.ContactTitleGetByIDAsync(request);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSelectListResponse ContactTitleGetAllList() {
            return base.Channel.ContactTitleGetAllList();
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSelectListResponse> ContactTitleGetAllListAsync() {
            return base.Channel.ContactTitleGetAllListAsync();
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleListResponse ContactTitleGetAll(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitlesGetBySearchRequest request) {
            return base.Channel.ContactTitleGetAll(request);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleListResponse> ContactTitleGetAllAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitlesGetBySearchRequest request) {
            return base.Channel.ContactTitleGetAllAsync(request);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber ContactTitleUpdate(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSaveRequest input) {
            return base.Channel.ContactTitleUpdate(input);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> ContactTitleUpdateAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ContactTitleSaveRequest input) {
            return base.Channel.ContactTitleUpdateAsync(input);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber ContactTitleDelete(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input) {
            return base.Channel.ContactTitleDelete(input);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> ContactTitleDeleteAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input) {
            return base.Channel.ContactTitleDeleteAsync(input);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CountryAdd(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySaveRequest input) {
            return base.Channel.CountryAdd(input);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CountryAddAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySaveRequest input) {
            return base.Channel.CountryAddAsync(input);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountryResponse CountryGetByID(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request) {
            return base.Channel.CountryGetByID(request);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountryResponse> CountryGetByIDAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request) {
            return base.Channel.CountryGetByIDAsync(request);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySelectListResponse CountryGetAllList() {
            return base.Channel.CountryGetAllList();
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySelectListResponse> CountryGetAllListAsync() {
            return base.Channel.CountryGetAllListAsync();
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountryListResponse CountryGetAll(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountriesGetBySearchRequest request) {
            return base.Channel.CountryGetAll(request);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountryListResponse> CountryGetAllAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountriesGetBySearchRequest request) {
            return base.Channel.CountryGetAllAsync(request);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CountryUpdate(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySaveRequest input) {
            return base.Channel.CountryUpdate(input);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CountryUpdateAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CountrySaveRequest input) {
            return base.Channel.CountryUpdateAsync(input);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CountryDelete(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input) {
            return base.Channel.CountryDelete(input);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CountryDeleteAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input) {
            return base.Channel.CountryDeleteAsync(input);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CustomerAdd(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSaveRequest input) {
            return base.Channel.CustomerAdd(input);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CustomerAddAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSaveRequest input) {
            return base.Channel.CustomerAddAsync(input);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerResponse CustomerGetByID(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request) {
            return base.Channel.CustomerGetByID(request);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerResponse> CustomerGetByIDAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest request) {
            return base.Channel.CustomerGetByIDAsync(request);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSelectListResponse CustomerGetAllList() {
            return base.Channel.CustomerGetAllList();
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSelectListResponse> CustomerGetAllListAsync() {
            return base.Channel.CustomerGetAllListAsync();
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerListResponse CustomerGetAll(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomersGetBySearchRequest request) {
            return base.Channel.CustomerGetAll(request);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerListResponse> CustomerGetAllAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomersGetBySearchRequest request) {
            return base.Channel.CustomerGetAllAsync(request);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CustomerUpdate(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSaveRequest input) {
            return base.Channel.CustomerUpdate(input);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CustomerUpdateAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CustomerSaveRequest input) {
            return base.Channel.CustomerUpdateAsync(input);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber CustomerDelete(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input) {
            return base.Channel.CustomerDelete(input);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ReturnNumber> CustomerDeleteAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.QueryByIdRequest input) {
            return base.Channel.CustomerDeleteAsync(input);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CategorySelectListResponse CategoryGetAllList() {
            return base.Channel.CategoryGetAllList();
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.CategorySelectListResponse> CategoryGetAllListAsync() {
            return base.Channel.CategoryGetAllListAsync();
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductListResponse ProductGetAll(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductsGetBySearchRequest request) {
            return base.Channel.ProductGetAll(request);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductListResponse> ProductGetAllAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.ProductsGetBySearchRequest request) {
            return base.Channel.ProductGetAllAsync(request);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.SupplierSelectListResponse SupplierGetAllList() {
            return base.Channel.SupplierGetAllList();
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.SupplierSelectListResponse> SupplierGetAllListAsync() {
            return base.Channel.SupplierGetAllListAsync();
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.LoginResponse LoginAuthentication(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.LoginRequest request) {
            return base.Channel.LoginAuthentication(request);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.LoginResponse> LoginAuthenticationAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.LoginRequest request) {
            return base.Channel.LoginAuthenticationAsync(request);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleResponse ApplicationUserToApplicationRoleIsIn(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleRequest request) {
            return base.Channel.ApplicationUserToApplicationRoleIsIn(request);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleResponse> ApplicationUserToApplicationRoleIsInAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleRequest request) {
            return base.Channel.ApplicationUserToApplicationRoleIsInAsync(request);
        }
        
        public Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRolesResponse UsernameInApplicationRoles(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleRequest request) {
            return base.Channel.UsernameInApplicationRoles(request);
        }
        
        public System.Threading.Tasks.Task<Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRolesResponse> UsernameInApplicationRolesAsync(Northwind2.ServiceWcf.Proxies.Northwind2ServiceReference.UserInRoleRequest request) {
            return base.Channel.UsernameInApplicationRolesAsync(request);
        }
    }
}
